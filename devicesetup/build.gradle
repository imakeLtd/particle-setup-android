apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

// This is the library version used when deploying the artifact
version = '0.6.1'
logger.error('An info log message - starting devicesetup gradle.')
ext {
    bintrayRepo = 'android'
    bintrayName = 'particle-device-setup'
    bintrayOrg = 'bevie'

    publishedGroupId = 'bevie'
    libraryName = 'particle-setup-androidlibrary'
    artifact = 'devicesetup'

    libraryDescription = "The Particle Device Setup library provides everything you need to " +
            "offer your users a simple initial setup process for Particle-powered devices.  This " +
            "includes all the necessary device communication code, an easily customizable UI, and " +
            "a simple developer API."

    siteUrl = 'https://github.com/imakeLtd/particle-setup-android'
    gitUrl = 'https://github.com/imakeLtd/particle-setup-android.git'

    libraryVersion = project.version

    developerId = 'bevie'
    developerName = 'Marko Heyns'
    developerEmail = 'marko.h@imake.pro'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

logger.error('An info log message - middle devicesetup gradle.')

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'

    dexOptions {
        javaMaxHeapSize "2g"
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError true
    }

}

logger.error('An info log message - middle 2 devicesetup gradle.')
// TESTING ONLY: to build against a locally built version of the cloud SDK, uncomment these
// lines, and the "compile(name:'cloudsdk', ext:'aar')" line below under dependencies.
// (If you don't know what this means or why we (the SDK maintainers at Particle) would want to
// do this, then you can safely ignore all this and keep it commented out. :)
//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}


dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')

    api 'io.particle:cloudsdk:0.5.1'

    api 'com.squareup.phrase:phrase:1.0.3'
    api 'uk.co.chrisjenx:calligraphy:2.3.0'
    api 'com.segment.analytics.android:analytics:4.3.1'
    api 'com.madgag.spongycastle:core:1.58.0.0'

    api 'com.google.dagger:dagger:2.15'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'
    api 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    api 'com.android.support:appcompat-v7:27.1.1'
    api 'com.android.support:recyclerview-v7:27.1.1'

    // TESTING ONLY (see other TESTING comments further up)
//    compile(name: 'cloudsdk', ext: 'aar')
}

logger.error('An info log message - middle 3 devicesetup gradle.')
apply from: '../pom_generator_v1.gradle'
//apply from: '../bintray_upload_v1.gradle'
logger.error('An info log message - middle 4 devicesetup gradle.')
if (project.rootProject.file('local.properties').exists()){
    logger.error('Error: local.properties file FOUND!')
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
} else {
    logger.error('Error: local.properties file not found.')
}

// disable insane, build-breaking doclint tool in Java 8
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        //noinspection SpellCheckingInspection
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}
//buildscript {
//    repositories {
//        jcenter()
//    }
//    dependencies {
//        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
//        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
//    }
//}
//logger.error('An info log message - finished new buildscript.')
//apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'
//
//logger.error('An info log message - finished new apply plugins.')
//group = publishedGroupId
//version = libraryVersion
//
//install {
//    repositories.mavenInstaller {
//        pom.project {
//            packaging 'aar'
//            groupId publishedGroupId
//            artifactId artifact
//
//            name libraryName
//            description libraryDescription
//            url siteUrl
//
//            licenses {
//                license {
//                    name licenseName
//                    url licenseUrl
//                }
//            }
//            developers {
//                developer {
//                    id developerId
//                    name developerName
//                    email developerEmail
//                }
//            }
//            scm {
//                connection gitUrl
//                developerConnection gitUrl
//                url siteUrl
//            }
//        }
//    }
//}
//
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//    logger.error(user)
//    logger.error(key)
//    configurations = ['archives']
//    pkg {
//        repo = bintrayRepo
//        name = bintrayName
//        desc = libraryDescription
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = allLicenses
//        dryRun = false
//        publish = true
//        override = false
//        publicDownloadNumbers = true
//        version {
//            desc = libraryDescription
//        }
//    }
//}
logger.error('An info log message - finish devicesetup gradle.')